// ------GLOBAL VARIABLES------------

const listItems = document.getElementsByClassName('student-item');
const page = document.querySelector('.page');
var isFloat = (listItems.length / 10) % 1 !== 0;
const linkList = document.createElement('ul');
linkList.classList.add("pagination");
page.appendChild(linkList);
const deactivateQueue = []; //This will be used to save the last page that was clicked so the program doesn't have to loop through the entire directory                               each time a new page is clicked 
const a = document.getElementsByTagName('a');

//--------FUNCTIONS-------------------


//Create pagination links
function createListItem(textContent) {
    const linkListItem = document.createElement('li');
    const a = document.createElement('a');
    a.textContent = textContent;
    linkListItem.appendChild(a);
    linkList.appendChild(linkListItem);
}


//Determine number of links generated by createListItem() function
function appendPageLinks() {
    
    for(let x = 1; x<=Math.floor(listItems.length / 10); x++) {
        createListItem(x);
        
        //Create one additional page of less than ten students with the total number of students is not divisible by ten
        if(x === Math.floor(listItems.length / 10)  && isFloat === true) {
            createListItem(x + 1)
        }
    }
}



//Hide all students in listItems collection except 0-9 on initial page load and add active class to first item in 'a' collection and push it to deactivateQueue.
function initialPageLoad() {
    for(let x = 10; x < listItems.length; x++) {
        listItems[x].style.display = 'none';
    }
    a[0].classList.add('active');
    deactivateQueue.push(a[0].textContent);
}

//Shows student list from current link and hides students from link clicked previously
function showPage() {
    appendPageLinks();
    initialPageLoad();
    const ul = document.querySelector('.pagination');
    ul.addEventListener('click', (e)=> {
        
        
        //Create variables for better readability in if statement below
        const currentLink_NumberOfStudentsLessThanTen = e.target.textContent == a.length && isFloat;
        const isAElement = e.target.nodeName === 'A';
        const showEndIndex = parseInt(e.target.textContent + 0);
        const clickedLink = a[parseInt(e.target.textContent) - 1];
        const hasActiveClass = e.target.classList.contains("active");
        
        //show list items
        if(isAElement && !hasActiveClass) {
            if(currentLink_NumberOfStudentsLessThanTen) {
               for(let x = showEndIndex - 10; x < listItems.length; x++) {
                listItems[x].style.display = 'block';
                }
            }else {
                for(let x = showEndIndex - 10; x < showEndIndex; x++) {
                    listItems[x].style.display = 'block';
                }
            }
            clickedLink.classList.add('active');
            deactivateQueue.push(clickedLink.textContent);
           
            
            //Create variables for better readability in if statement below
            const previousLink_NumberOfStudentsLessThanTen = deactivateQueue[0] == a.length && isFloat;
            const previousClickedLink = a[parseInt(deactivateQueue[0] - 1)];
            const hideEndIndex = parseInt(deactivateQueue[0] + 0);
            
            //hide previous list items
            if(previousLink_NumberOfStudentsLessThanTen) {
                
               for(let x = hideEndIndex - 10; x < listItems.length; x++) {
                listItems[x].style.display = 'none';
                }
            }else {
                for(let x = hideEndIndex - 10; x < hideEndIndex; x++) {
                    listItems[x].style.display = 'none';
                }
            }
           previousClickedLink.classList.remove('active');
           deactivateQueue.shift();  
        }
    })
}

showPage();

